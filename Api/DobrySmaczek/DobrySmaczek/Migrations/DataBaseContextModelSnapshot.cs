// <auto-generated />
using DobrySmaczek.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using System;

namespace DobrySmaczek.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DobrySmaczek.Models.CategoryFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("CategoryFoods");
                });

            modelBuilder.Entity("DobrySmaczek.Models.InfoOfRestaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adress");

                    b.Property<DateTime>("Close");

                    b.Property<double>("DeliveryCosts");

                    b.Property<double>("MinOrderAmount");

                    b.Property<DateTime>("Open");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("InfoOfRestaurants");
                });

            modelBuilder.Entity("DobrySmaczek.Models.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Components");

                    b.Property<int?>("MenuId");

                    b.Property<string>("Name");

                    b.Property<int?>("OrderId");

                    b.Property<double>("Price");

                    b.Property<int?>("TypeOfFoodId");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("OrderId");

                    b.HasIndex("TypeOfFoodId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("DobrySmaczek.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("RestaurantId");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("DobrySmaczek.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("DeliveryCosts");

                    b.Property<double>("TotalAmount");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DobrySmaczek.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("DeliveryCosts");

                    b.Property<double>("EstimatedDeliveryTime");

                    b.Property<int?>("InfoOfRestaurantsId");

                    b.Property<double>("Lat");

                    b.Property<double>("Long");

                    b.Property<double>("MinOrderAmount");

                    b.Property<string>("Name");

                    b.Property<double>("Radius");

                    b.Property<int>("Rating");

                    b.HasKey("Id");

                    b.HasIndex("InfoOfRestaurantsId");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("DobrySmaczek.Models.Reviews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RatingDelivery");

                    b.Property<int>("RatingFood");

                    b.Property<int?>("RestaurantId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("DobrySmaczek.Models.TypeOfFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TypeOfFoods");
                });

            modelBuilder.Entity("DobrySmaczek.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adress");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("UserName");

                    b.Property<int>("Users");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DobrySmaczek.Models.Meal", b =>
                {
                    b.HasOne("DobrySmaczek.Models.Menu")
                        .WithMany("Meals")
                        .HasForeignKey("MenuId");

                    b.HasOne("DobrySmaczek.Models.Order")
                        .WithMany("Meal")
                        .HasForeignKey("OrderId");

                    b.HasOne("DobrySmaczek.Models.TypeOfFood", "TypeOfFood")
                        .WithMany()
                        .HasForeignKey("TypeOfFoodId");
                });

            modelBuilder.Entity("DobrySmaczek.Models.Menu", b =>
                {
                    b.HasOne("DobrySmaczek.Models.Restaurant")
                        .WithMany("Menu")
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("DobrySmaczek.Models.Restaurant", b =>
                {
                    b.HasOne("DobrySmaczek.Models.InfoOfRestaurant", "InfoOfRestaurants")
                        .WithMany()
                        .HasForeignKey("InfoOfRestaurantsId");
                });

            modelBuilder.Entity("DobrySmaczek.Models.Reviews", b =>
                {
                    b.HasOne("DobrySmaczek.Models.Restaurant")
                        .WithMany("Reviews")
                        .HasForeignKey("RestaurantId");
                });
#pragma warning restore 612, 618
        }
    }
}
